//name: Defender for Antivirus (MDAV) Status Overview (Win, macOS, Linux) - POWER QUERY
//Updated: 2025-2-11
//description:
//This query will provide an extensive report of Windows, macOS and Linux devices (OS platform, OS version, OS architecture, device join type), their installed MDAV versions (signature, engine, platform),
//MDAV status (active, passive, EDR blocked, unknown ... Windows only) and MsSense version (EDR component).
//It can be used for getting an overview of onboarding issues (e.g. old platform version, devices in EDR blocked mode, ...) and to track the migration from a 3rd-party solution to MDE.
//Get the current MDAV signature, engine and platform versions at https://www.microsoft.com/security/encyclopedia/adlpackages.aspx?action=info
let avmodetable = DeviceTvmSecureConfigurationAssessment
| where ConfigurationId == "scid-2010" and isnotempty(Context)
| extend avdata = parsejson(Context)
| extend AVMode = case(
    tostring(avdata[0][0]) == "0", "Active",
    tostring(avdata[0][0]) == "1", "Passive",
    tostring(avdata[0][0]) == "4", "EDR Blocked",
    "Unknown"
)
| project DeviceId, AVMode;
let sense = DeviceTvmSoftwareInventory
| where SoftwareName startswith "defender_for_"
| project DeviceId, MsSenseVersion = SoftwareVersion;
let deviceInfo = DeviceInfo
| summarize arg_max(Timestamp, *) by DeviceId;
DeviceTvmSecureConfigurationAssessment
| where ConfigurationId in ("scid-6095", "scid-5095", "scid-2011") and IsApplicable == "1"
| extend avdata = parsejson(Context)
| extend AVSigVersion = tostring(avdata[0][0])
| extend AVEngineVersion = tostring(avdata[0][1])
| extend AVSigLastUpdateTime = todatetime(avdata[0][2])
| extend AVProductVersion = tostring(avdata[0][3])
| join kind=inner (deviceInfo) on DeviceId
| where OnboardingStatus == "Onboarded"
| project LastSeen = Timestamp1, DeviceId, DeviceName, DeviceType, RegistryDeviceTag, OSPlatform, 
          OSDistribution = iff(OSPlatform != OSDistribution, OSDistribution, ""), OSVersionInfo, 
          OSBuild, OSArchitecture, MDAVSignatureVersion = AVSigVersion, MDAVEngineVersion = AVEngineVersion, 
          MDAVPlatformVersion = AVProductVersion, MDAVSignLastUpdate = AVSigLastUpdateTime, JoinType
| join kind=inner (avmodetable) on DeviceId
| join kind=inner (sense) on DeviceId
| project-away DeviceId1, DeviceId2;

